// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

#include <ravl.h>
#include <ravl_requests.h>

using namespace ravl;

std::string coffeelake_quote = R"({
  "source": "sgx",
  "evidence": "AwACAAAAAAAIAA0Ak5pyM/ecTKmUCg2zlX8GByV7poCkzztBEA1BOoP0LTUAAAAAExMCB/+ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAHAAAAAAAAAL+GiaH9s4KO+lbZ8joVJOwfFkGWioERZbcEz2F49+ALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAJZJn5IkTD587Qd7hqG0hMYUwp/HikFCd6JbwZEmKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrJdgfT2OVVBjgFfTo5mAXKqsKIHwd6dJv2Eh35eavyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARBAAAFwOiY5gHFvAX3ASQ1Nh6SzoZHgNbv/fEXRJLwZxq1K2IJKEC2/8bCfYWQDZSCAe6yynuHkC3AJfB9a82FetQJpBWxRiC4Pxuqak78F0MDYo2IQy0PPTta8rsRgAZV3bfZj+xSqjHCfGZIhcoy7C1WCCXBlyL/EkDPTjDQqfJc4cExMCB/+ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAAAAAAAHAAAAAAAAAIzlhoW+NuRhh8Izx+me1v5127M/dWetohewd+zYz4L5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMT1d115ZQPpYTf3fGioKaAFasje1wFAsIGwlEkMV7/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaeHiXlftEWtCNsuUhLnySVEgAQYfKtaGgDAAVzDMzdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjGzAvqVqMFAZBhm+ZXw077rHYxYB/xb3izTOcK9RdQPoy7LkdysbJaKSZh4wSYpv0Vo68mC0liNyw68kKXvRMiAAAAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8FANwNAAAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRWpUQ0NCRFNnQXdJQkFnSVZBTDEzdExSZURGVnFSZFc2L2s3ZG1HY0pCSXduTUFvR0NDcUdTTTQ5QkFNQwpNSEV4SXpBaEJnTlZCQU1NR2tsdWRHVnNJRk5IV0NCUVEwc2dVSEp2WTJWemMyOXlJRU5CTVJvd0dBWURWUVFLCkRCRkpiblJsYkNCRGIzSndiM0poZEdsdmJqRVVNQklHQTFVRUJ3d0xVMkZ1ZEdFZ1EyeGhjbUV4Q3pBSkJnTlYKQkFnTUFrTkJNUXN3Q1FZRFZRUUdFd0pWVXpBZUZ3MHlNakEzTVRjd01ETTVNak5hRncweU9UQTNNVGN3TURNNQpNak5hTUhBeElqQWdCZ05WQkFNTUdVbHVkR1ZzSUZOSFdDQlFRMHNnUTJWeWRHbG1hV05oZEdVeEdqQVlCZ05WCkJBb01FVWx1ZEdWc0lFTnZjbkJ2Y21GMGFXOXVNUlF3RWdZRFZRUUhEQXRUWVc1MFlTQkRiR0Z5WVRFTE1Ba0cKQTFVRUNBd0NRMEV4Q3pBSkJnTlZCQVlUQWxWVE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRQoxdGc4aDBhTDRDTW81cTZUV3JNa2IrWi8wWEs2ZU9Nc3NLYTEzbXZwWTZMUUN6ZnFzRDdvTUh5ODlHNVhmK2lrCkxxMW9mdlc4czdhV0RUSithMGExdEtPQ0FxZ3dnZ0trTUI4R0ExVWRJd1FZTUJhQUZORG9xdHAxMS9rdVNSZVkKUEhzVVpkRFY4bGxOTUd3R0ExVWRId1JsTUdNd1lhQmZvRjJHVzJoMGRIQnpPaTh2WVhCcExuUnlkWE4wWldSegpaWEoyYVdObGN5NXBiblJsYkM1amIyMHZjMmQ0TDJObGNuUnBabWxqWVhScGIyNHZkak12Y0dOclkzSnNQMk5oClBYQnliMk5sYzNOdmNpWmxibU52WkdsdVp6MWtaWEl3SFFZRFZSME9CQllFRkI1VmxaTitSaEdUVS9KMUpjeDcKbE5Sc0xpVXRNQTRHQTFVZER3RUIvd1FFQXdJR3dEQU1CZ05WSFJNQkFmOEVBakFBTUlJQjFBWUpLb1pJaHZoTgpBUTBCQklJQnhUQ0NBY0V3SGdZS0tvWklodmhOQVEwQkFRUVE3STA4cS9pZ3laYmh6S3FiblpTSDNqQ0NBV1FHCkNpcUdTSWI0VFFFTkFRSXdnZ0ZVTUJBR0N5cUdTSWI0VFFFTkFRSUJBZ0VSTUJBR0N5cUdTSWI0VFFFTkFRSUMKQWdFUk1CQUdDeXFHU0liNFRRRU5BUUlEQWdFQ01CQUdDeXFHU0liNFRRRU5BUUlFQWdFRU1CQUdDeXFHU0liNApUUUVOQVFJRkFnRUJNQkVHQ3lxR1NJYjRUUUVOQVFJR0FnSUFnREFRQmdzcWhraUcrRTBCRFFFQ0J3SUJCakFRCkJnc3Foa2lHK0UwQkRRRUNDQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNDUUlCQURBUUJnc3Foa2lHK0UwQkRRRUMKQ2dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDQ3dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDREFJQkFEQVFCZ3NxaGtpRworRTBCRFFFQ0RRSUJBREFRQmdzcWhraUcrRTBCRFFFQ0RnSUJBREFRQmdzcWhraUcrRTBCRFFFQ0R3SUJBREFRCkJnc3Foa2lHK0UwQkRRRUNFQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNFUUlCQ3pBZkJnc3Foa2lHK0UwQkRRRUMKRWdRUUVSRUNCQUdBQmdBQUFBQUFBQUFBQURBUUJnb3Foa2lHK0UwQkRRRURCQUlBQURBVUJnb3Foa2lHK0UwQgpEUUVFQkFZQWtHN1ZBQUF3RHdZS0tvWklodmhOQVEwQkJRb0JBREFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFVCkp5U1A3YkhpZjM2eEhEN2dmTTFHSEFGL1AvMy80azIzQ2k3OFAxTFQwZ0lnY3BqemNwbEJTbjNjSXMwNzNoY0QKREFxZ0U4L3NtdmNIdng5cDJ3TitBOG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNtRENDQWo2Z0F3SUJBZ0lWQU5Eb3F0cDExL2t1U1JlWVBIc1VaZERWOGxsTk1Bb0dDQ3FHU000OUJBTUMKTUdneEdqQVlCZ05WQkFNTUVVbHVkR1ZzSUZOSFdDQlNiMjkwSUVOQk1Sb3dHQVlEVlFRS0RCRkpiblJsYkNCRApiM0p3YjNKaGRHbHZiakVVTUJJR0ExVUVCd3dMVTJGdWRHRWdRMnhoY21FeEN6QUpCZ05WQkFnTUFrTkJNUXN3CkNRWURWUVFHRXdKVlV6QWVGdzB4T0RBMU1qRXhNRFV3TVRCYUZ3MHpNekExTWpFeE1EVXdNVEJhTUhFeEl6QWgKQmdOVkJBTU1Ha2x1ZEdWc0lGTkhXQ0JRUTBzZ1VISnZZMlZ6YzI5eUlFTkJNUm93R0FZRFZRUUtEQkZKYm5SbApiQ0JEYjNKd2IzSmhkR2x2YmpFVU1CSUdBMVVFQnd3TFUyRnVkR0VnUTJ4aGNtRXhDekFKQmdOVkJBZ01Ba05CCk1Rc3dDUVlEVlFRR0V3SlZVekJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTDlxK05NcDJJT2cKdGRsMWJrL3VXWjUrVEdRbThhQ2k4ejc4ZnMrZktDUTNkK3VEelhuVlRBVDJaaERDaWZ5SXVKd3ZOM3dOQnA5aQpIQlNTTUpNSnJCT2pnYnN3Z2Jnd0h3WURWUjBqQkJnd0ZvQVVJbVVNMWxxZE5JbnpnN1NWVXI5UUd6a25CcXd3ClVnWURWUjBmQkVzd1NUQkhvRVdnUTRaQmFIUjBjSE02THk5alpYSjBhV1pwWTJGMFpYTXVkSEoxYzNSbFpITmwKY25acFkyVnpMbWx1ZEdWc0xtTnZiUzlKYm5SbGJGTkhXRkp2YjNSRFFTNWtaWEl3SFFZRFZSME9CQllFRk5EbwpxdHAxMS9rdVNSZVlQSHNVWmREVjhsbE5NQTRHQTFVZER3RUIvd1FFQXdJQkJqQVNCZ05WSFJNQkFmOEVDREFHCkFRSC9BZ0VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDSmdUYnRWcU95WjFtM2pxaUFYTTZRWWE2cjVzV1MKNHkvRzd5OHVJSkd4ZHdJZ1JxUHZCU0t6elFhZ0JMUXE1czVBNzBwZG9pYVJKOHovMHVEejROZ1Y5MWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNqekNDQWpTZ0F3SUJBZ0lVSW1VTTFscWROSW56ZzdTVlVyOVFHemtuQnF3d0NnWUlLb1pJemowRUF3SXcKYURFYU1CZ0dBMVVFQXd3UlNXNTBaV3dnVTBkWUlGSnZiM1FnUTBFeEdqQVlCZ05WQkFvTUVVbHVkR1ZzSUVOdgpjbkJ2Y21GMGFXOXVNUlF3RWdZRFZRUUhEQXRUWVc1MFlTQkRiR0Z5WVRFTE1Ba0dBMVVFQ0F3Q1EwRXhDekFKCkJnTlZCQVlUQWxWVE1CNFhEVEU0TURVeU1URXdORFV4TUZvWERUUTVNVEl6TVRJek5UazFPVm93YURFYU1CZ0cKQTFVRUF3d1JTVzUwWld3Z1UwZFlJRkp2YjNRZ1EwRXhHakFZQmdOVkJBb01FVWx1ZEdWc0lFTnZjbkJ2Y21GMAphVzl1TVJRd0VnWURWUVFIREF0VFlXNTBZU0JEYkdGeVlURUxNQWtHQTFVRUNBd0NRMEV4Q3pBSkJnTlZCQVlUCkFsVlRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVDNm5Fd01ESVlaT2ovaVBXc0N6YUVLaTcKMU9pT1NMUkZoV0dqYm5CVkpmVm5rWTR1M0lqa0RZWUwwTXhPNG1xc3lZamxCYWxUVll4RlAyc0pCSzV6bEtPQgp1ekNCdURBZkJnTlZIU01FR0RBV2dCUWlaUXpXV3AwMGlmT0R0SlZTdjFBYk9TY0dyREJTQmdOVkhSOEVTekJKCk1FZWdSYUJEaGtGb2RIUndjem92TDJObGNuUnBabWxqWVhSbGN5NTBjblZ6ZEdWa2MyVnlkbWxqWlhNdWFXNTAKWld3dVkyOXRMMGx1ZEdWc1UwZFlVbTl2ZEVOQkxtUmxjakFkQmdOVkhRNEVGZ1FVSW1VTTFscWROSW56ZzdTVgpVcjlRR3prbkJxd3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRRXdDZ1lJCktvWkl6ajBFQXdJRFNRQXdSZ0loQU9XLzVRa1IrUzlDaVNEY05vb3dMdVBSTHNXR2YvWWk3R1NYOTRCZ3dUd2cKQWlFQTRKMGxySG9NcytYbzVvL3NYNk85UVd4SFJBdlpVR09kUlE3Y3ZxUlhhcUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KAA==",
  "endorsements": ""
})";

Options default_options;

namespace ravl
{
  Response Request::execute(bool verbose) const
  {
    return Response();
  }

  std::vector<uint8_t> Response::url_decode(const std::string& in)
  {
    return {};
  }

  std::vector<uint8_t> Response::get_header_data(
    const std::string& name, bool url_decoded) const
  {
    return {};
  }
}

int main()
{
  try
  {
    Attestation att(coffeelake_quote);
    bool r = att.verify(default_options);
    printf("with endorsements: %d\n", r);

    Attestation att_without = att;
    att_without.endorsements = {};
    att_without.verify(default_options);
    printf("without endorsements: %d\n", r);

    return 0;
  }
  catch (const std::exception& ex)
  {
    printf("Exception: %s\n", ex.what());
    return 1;
  }
  catch (...)
  {
    printf("Unknown exception caught.\n");
    return 1;
  }
}